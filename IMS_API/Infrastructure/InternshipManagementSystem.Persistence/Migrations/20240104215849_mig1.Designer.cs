// <auto-generated />
using System;
using InternshipManagementSystem.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InternshipManagementSystem.Persistence.Migrations
{
    [DbContext(typeof(InternshipManagementSystemDbContext))]
    [Migration("20240104215849_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Advisor", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AdviserGSMNumber")
                        .HasColumnType("text");

                    b.Property<string>("AdviserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdviserName")
                        .HasColumnType("text");

                    b.Property<string>("AdviserSurname")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("TC_ID")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Advisors");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.FileData", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InternshipId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("Internshipid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("Internshipid");

                    b.ToTable("FileData");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Internship", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdviserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AttendanceScheduleid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InternshipBookid")
                        .HasColumnType("uuid");

                    b.Property<string>("InternshipId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("SPASid")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("StudentID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("Studentid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("WeeklyWorkPlanid")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.HasIndex("AttendanceScheduleid");

                    b.HasIndex("InternshipBookid");

                    b.HasIndex("SPASid");

                    b.HasIndex("Studentid");

                    b.HasIndex("WeeklyWorkPlanid");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AdviserID")
                        .HasColumnType("text");

                    b.Property<Guid?>("Advisorid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<float?>("GPA")
                        .HasColumnType("real");

                    b.Property<string>("ProgramName")
                        .HasColumnType("text");

                    b.Property<string>("StudentGSMNumber")
                        .HasColumnType("text");

                    b.Property<string>("StudentID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StudentName")
                        .HasColumnType("text");

                    b.Property<string>("StudentSurname")
                        .HasColumnType("text");

                    b.Property<string>("TC_ID")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("Advisorid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.FileData", b =>
                {
                    b.HasOne("İnternshipManagementSystem.Domain.Entities.Internship", null)
                        .WithMany("OtherFiles")
                        .HasForeignKey("Internshipid");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Internship", b =>
                {
                    b.HasOne("İnternshipManagementSystem.Domain.Entities.FileData", "AttendanceSchedule")
                        .WithMany()
                        .HasForeignKey("AttendanceScheduleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("İnternshipManagementSystem.Domain.Entities.FileData", "InternshipBook")
                        .WithMany()
                        .HasForeignKey("InternshipBookid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("İnternshipManagementSystem.Domain.Entities.FileData", "SPAS")
                        .WithMany()
                        .HasForeignKey("SPASid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("İnternshipManagementSystem.Domain.Entities.Student", null)
                        .WithMany("Internships")
                        .HasForeignKey("Studentid");

                    b.HasOne("İnternshipManagementSystem.Domain.Entities.FileData", "WeeklyWorkPlan")
                        .WithMany()
                        .HasForeignKey("WeeklyWorkPlanid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceSchedule");

                    b.Navigation("InternshipBook");

                    b.Navigation("SPAS");

                    b.Navigation("WeeklyWorkPlan");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Student", b =>
                {
                    b.HasOne("İnternshipManagementSystem.Domain.Entities.Advisor", null)
                        .WithMany("Students")
                        .HasForeignKey("Advisorid");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Advisor", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Internship", b =>
                {
                    b.Navigation("OtherFiles");
                });

            modelBuilder.Entity("İnternshipManagementSystem.Domain.Entities.Student", b =>
                {
                    b.Navigation("Internships");
                });
#pragma warning restore 612, 618
        }
    }
}
